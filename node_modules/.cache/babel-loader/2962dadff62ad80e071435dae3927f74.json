{"remainingRequest":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\babel-loader\\lib\\index.js!D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\SchoolProject\\dp_font\\src\\components\\LoginComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\src\\components\\LoginComponent.vue","mtime":1654742317345},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHJlcXVlc3QgZnJvbSAiQC91dGlscy9yZXF1ZXN0IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJMb2dpbkNvbXBvbmVudCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIGNhcHRjaGFfdXJsOiAiIiwKICAgICAgcnVsZUZvcm06IHsKICAgICAgICAvL2NhcHRjaGFfa2V5OiAiIiwKICAgICAgICAvL2NhcHRjaGE6ICIiLAogICAgICAgIHVzZXJuYW1lOiAiIiwKICAgICAgICBwYXNzd29yZDogIiIKICAgICAgfSwKICAgICAgcnVsZXM6IHsKICAgICAgICB1c2VybmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuivt+i+k+WFpeeUqOaIt+WQjSIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9XSwKICAgICAgICBwYXNzd29yZDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuivt+i+k+WFpeWvhueggSIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9XSAvLyBjYXB0Y2hhOiBbeyByZXF1aXJlZDogZmFsc2UsIG1lc3NhZ2U6ICLor7fovpPlhaXpqozor4HnoIEiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sCgogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybShmb3JtTmFtZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2codGhpcy5ydWxlRm9ybSk7CiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgcmVxdWVzdC5nZXQoJ3VzZXIvbG9naW4/dXNlcm5hbWU9JyArIF90aGlzLnJ1bGVGb3JtLnVzZXJuYW1lICsgJyZwYXNzd29yZD0nICsgX3RoaXMucnVsZUZvcm0ucGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnJldCA9PSAwKSB7CiAgICAgICAgICAgICAgX3RoaXMucmVmcmVzaF9jYXB0Y2hhKCk7CgogICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKHJlc3BvbnNlLmRhdGEubXNnKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB2YXIgdG9rZW4gPSByZXNwb25zZS5kYXRhLnRva2VuOwogICAgICAgICAgICAgIHZhciBpZCA9IHJlc3BvbnNlLmRhdGEuaWQ7CgogICAgICAgICAgICAgIF90aGlzLiRzdG9yZS5jb21taXQoJ3NhdmVVc2VySW5mbycsIHsKICAgICAgICAgICAgICAgICd1c2VybmFtZSc6IF90aGlzLnJ1bGVGb3JtLnVzZXJuYW1lLAogICAgICAgICAgICAgICAgJ3Rva2VuJzogdG9rZW4sCiAgICAgICAgICAgICAgICAnaWQnOiBpZAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgbmFtZTogJ0hvbWUnCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICBfdGhpcy5yZWZyZXNoX2NhcHRjaGEoKTsKCiAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKGVycm9yLnJlc3BvbnNlLmRhdGEuZGV0YWlsKTsKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3Igc3VibWl0ISEnKTsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHJlc2V0Rm9ybTogZnVuY3Rpb24gcmVzZXRGb3JtKGZvcm1OYW1lKSB7CiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnJlc2V0RmllbGRzKCk7CiAgICB9LAogICAgcmVmcmVzaF9jYXB0Y2hhOiBmdW5jdGlvbiByZWZyZXNoX2NhcHRjaGEoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5heGlvcy5nZXQoJ2NhcHRjaGEvcmVmcmVzaC8nLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMi5jYXB0Y2hhX3VybCA9IHJlc3BvbnNlLmRhdGEuaW1hZ2VfdXJsOwogICAgICAgIF90aGlzMi5ydWxlRm9ybS5jYXB0Y2hhX2tleSA9IHJlc3BvbnNlLmRhdGEua2V5OwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJlZnJlc2hfY2FwdGNoYSgpOwogIH0KfTs="},{"version":3,"sources":["LoginComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,OAAA,OAAA,MAAA,iBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA;AACA,MAAA,QAAA,EAAA;AACA;AACA;AACA,QAAA,QAAA,EAAA,EAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OAFA;AAQA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,QAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CAJA,CAKA;;AALA;AARA,KAAA;AAgBA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,QADA,EACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,QAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,yBAAA,KAAA,CAAA,QAAA,CAAA,QAAA,GAAA,YAAA,GAAA,KAAA,CAAA,QAAA,CAAA,QAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,gBAAA,QAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA,EAAA;AACA,cAAA,KAAA,CAAA,eAAA;;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA;AACA,aAHA,MAGA;AACA,kBAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,kBAAA,EAAA,GAAA,QAAA,CAAA,IAAA,CAAA,EAAA;;AACA,cAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA;AAAA,4BAAA,KAAA,CAAA,QAAA,CAAA,QAAA;AAAA,yBAAA,KAAA;AAAA,sBAAA;AAAA,eAAA;;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eAAA;AACA;AAEA,WAXA,EAWA,KAXA,CAWA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,CAAA,eAAA;;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,WAdA;AAeA,SAhBA,MAgBA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,iBAAA,KAAA;AACA;AACA,OArBA;AAsBA,KAzBA;AA0BA,IAAA,SA1BA,qBA0BA,QA1BA,EA0BA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,WAAA;AACA,KA5BA;AA6BA,IAAA,eA7BA,6BA6BA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,kBAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AAAA,8BAAA;AAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,SAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,GAAA;AACA,OAHA;AAIA;AAlCA,GApBA;AAwDA,EAAA,OAxDA,qBAwDA;AACA,SAAA,eAAA;AACA;AA1DA,CAAA","sourcesContent":["<template>\r\n  <el-form\r\n    :model=\"ruleForm\"\r\n    :rules=\"rules\"\r\n    ref=\"ruleForm\"\r\n    label-width=\"80px\"\r\n    class=\"demo-ruleForm\"\r\n  >\r\n    <el-form-item label=\"用户名\" prop=\"username\">\r\n      <el-input\r\n        prefix-icon=\"el-icon-user-solid\"\r\n        v-model=\"ruleForm.username\"\r\n      ></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item label=\"密码\" prop=\"password\">\r\n      <el-input\r\n        prefix-icon=\"el-icon-lock\" type=\"password\"\r\n        v-model=\"ruleForm.password\"\r\n      ></el-input>\r\n    </el-form-item>\r\n\r\n    <!-- <el-form-item label=\"验证码\" prop=\"captcha\">\r\n        <el-row type=\"flex\" class=\"row-bg\" justify=\"space-between\">\r\n            <el-col :span=\"11\">\r\n                <el-input\r\n                prefix-icon=\"el-icon-view\"\r\n                v-model=\"ruleForm.captcha\"\r\n                ></el-input>\r\n            </el-col>\r\n            <el-col :span=\"11\" style=\"line-height: 100%\">\r\n                <img :src=\"captcha_url\" alt=\"\" @click=\"refresh_captcha()\" style=\" cursor:pointer;\" />\r\n                <el-input type=\"hidden\" name=\"captcha_key\" v-model=\"ruleForm.captcha_key\" style=\"display: none;\" ></el-input>\r\n            </el-col>\r\n      </el-row>\r\n    </el-form-item> -->\r\n\r\n    <el-form-item>\r\n      <el-row type=\"flex\" class=\"row-bg\" justify=\"space-between\">\r\n        <el-col :span=\"11\">\r\n          <el-button\r\n            type=\"primary\"\r\n            @click=\"submitForm('ruleForm')\"\r\n            style=\"width: 100%\"\r\n            >登&nbsp;&nbsp;录</el-button\r\n          >\r\n        </el-col>\r\n        <el-col :span=\"11\">\r\n          <el-button @click=\"resetForm('ruleForm')\" style=\"width: 100%\"\r\n            >重&nbsp;&nbsp;置</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nexport default {\r\n    name: \"LoginComponent\",\r\n    data() {\r\n        return {\r\n           // captcha_url: \"\",\r\n            ruleForm: {\r\n                //captcha_key: \"\",\r\n                //captcha: \"\",\r\n                username: \"\",\r\n                password: \"\",\r\n            },\r\n            rules: {\r\n                username: [\r\n                { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n                ],\r\n                password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\r\n               // captcha: [{ required: false, message: \"请输入验证码\", trigger: \"blur\" }],\r\n            },\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n          console.log(this.ruleForm);\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                   request.get('user/login?username='+this.ruleForm.username +'&password='+this.ruleForm.password).then((response) => {\r\n\t\t\t\t\t\tif(response.data.ret ==0){\r\n\t\t\t\t\t\t\tthis.refresh_captcha();\r\n\t\t\t\t\t\t\tthis.$message.error(response.data.msg);    \r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlet token = response.data.token\r\n\t\t\t\t\t\t\tlet id = response.data.id\r\n\t\t\t\t\t\t\tthis.$store.commit('saveUserInfo', {'username': this.ruleForm.username, 'token': token, 'id': id})\r\n\t\t\t\t\t\t\tthis.$router.push({name: 'Home'})\r\n\t\t\t\t\t\t}\r\n                        \r\n                    }).catch((error) => {\r\n                        this.refresh_captcha()\r\n                        this.$message.error(error.response.data.detail);                        \r\n                    })\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        refresh_captcha() {\r\n            this.axios.get('captcha/refresh/', { headers : {'X-Requested-With': 'XMLHttpRequest'} }).then((response) => {\r\n                this.captcha_url = response.data.image_url;\r\n                this.ruleForm.captcha_key = response.data.key;\r\n            })  \r\n        }     \r\n  },\r\n  mounted() {\r\n   this.refresh_captcha()\r\n  },\r\n  \r\n \r\n}\r\n</script>"],"sourceRoot":"src/components"}]}