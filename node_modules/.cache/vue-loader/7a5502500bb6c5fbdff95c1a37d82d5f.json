{"remainingRequest":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\SchoolProject\\dp_font\\src\\components\\LocationShow.vue?vue&type=style&index=0&id=4efb2782&scoped=true&lang=css&","dependencies":[{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\src\\components\\LocationShow.vue","mtime":1654868032860},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKDQojY29udGFpbmVyIHsNCiAgLyrlnLDlm74o5a655ZmoKeaYvuekuuWkp+WwjyovIC8q6K6+572u5Li65YWo5bGP77yM5L2N5LqO5pyA5LiL5bGCKi8NCiAgd2lkdGg6IHdpZHRoOw0KICBoZWlnaHQ6IGhlaWdodDsNCiAgLyogcG9zaXRpb246IGFic29sdXRlOyAqLw0KICB0b3A6IDBweDsNCiAgYm90dG9tOiAwcHg7DQogIGxlZnQ6IDBweDsNCiAgcmlnaHQ6IDBweDsNCiAgei1pbmRleDogMDsNCn0NCg=="},{"version":3,"sources":["LocationShow.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LocationShow.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <body>\r\n    <div id=\"container\"></div>\r\n  </body>\r\n</template>\r\n\r\n<style scoped>\r\n#container {\r\n  /*地图(容器)显示大小*/ /*设置为全屏，位于最下层*/\r\n  width: width;\r\n  height: height;\r\n  /* position: absolute; */\r\n  top: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  z-index: 0;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nexport default {\r\n  props: [\"boHeight\", \"boxWith\"],\r\n  data() {\r\n    return {\r\n      // markerUrl: require(\"../assets/marker.png\"),  // 点标记图片路径\r\n      map: \"\",\r\n      zoom: 17.2, // 地图一开始的缩放级别\r\n      center: new window.TMap.LatLng(31.683617, 118.558927), // 地图一开始的中心点\r\n      points: [],\r\n      point: {\r\n        id: \"\",\r\n        latitue: \"\",\r\n        longitue: \"\",\r\n      },\r\n      geometry: {\r\n        id: \"\", //点标记唯一标识，后续如果有删除、修改位置等操作，都需要此id\r\n        styleId: \"mystyle\", //指定样式id\r\n        position: Object, //点标记坐标位置\r\n      },\r\n      geometries: [],\r\n      markerLayers: [],\r\n      markerLayer: {},\r\n      locationData: [],\r\n      locationList: [],\r\n    };\r\n  },\r\n  // created() {\r\n  //   this.getLocation();\r\n  //   console.log(this.points)\r\n  //   this.initMap(this.center, this.zoom); // 初始化页面后直接初始化地图\r\n  // },\r\n  mounted() {\r\n    this.getLocation();\r\n    if (window.onload) {\r\n      this.initMap(this.center, this.zoom);\r\n    } else {\r\n      window.addEventListener(\"load\", () => {\r\n        this.initMap(this.center, this.zoom);\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    getLocation() {\r\n      request.get(\"/dispatch/getGPSLocation\").then((res) => {\r\n        this.locationData = res.data.data;\r\n\r\n        for (let index = 0; index < this.locationData.length; index++) {\r\n          const element = this.locationData[index];\r\n          this.locationList.push({\r\n            index: index,\r\n            latitue: element.latitue,\r\n            longitue: element.longitue,\r\n          });\r\n          // this.point.latitue = element.latitue;\r\n          // this.point.longitue = element.longitue;\r\n          // this.points.push(this.point);\r\n          // this.point = {};\r\n          this.markerLayers.push({\r\n            id: element.targetId,\r\n            styleId: \"mystyle\",\r\n            position: new window.TMap.LatLng(element.longitue, element.latitue),\r\n            properties: {}, // 自定义属性，可以没有\r\n          });\r\n          this.geometry.id=element.targetId\r\n          this.geometry.styleId=\"mystyle\"\r\n          this.geometry.position= new window.TMap.LatLng(element.longitue, element.latitue)\r\n         \r\n          this.geometries.push(this.geometry);\r\n          this.geometry={}\r\n\r\n        }\r\n        console.log( this.geometries)\r\n      });\r\n    },\r\n    initMap(center, zoom) {\r\n      this.map = new window.TMap.Map(document.getElementById(\"container\"), {\r\n        center: center, //设置地图中心点坐标\r\n        zoom: zoom, //设置地图缩放级别\r\n        pitch: 43.5, //设置俯仰角\r\n        rotation: 45, //设置地图旋转角度\r\n      });\r\n\r\n      this.markerLayers = new window.TMap.MultiMarker({\r\n        // 创建标记层\r\n        map: this.map, //指定地图容器\r\n        geometries: this.geometries,\r\n        styles: {\r\n          // 点标记样式\r\n          mystyle: new window.TMap.MarkerStyle({\r\n            width: 20,\r\n            height: 30,\r\n            anchor: { x: 10, y: 30 },\r\n            opacity: 0.5,\r\n          }),\r\n        },\r\n      });\r\n      // this.forList();\r\n    },\r\n    //循环添加标记点\r\n    // forList(){\r\n\r\n    //   for (let index = 0; index < this.locationList.length; index++) {\r\n    //     const element = this.locationList[index];\r\n    //     console.log(element);\r\n    //       this.addPoint(element);\r\n    //   }\r\n    // },\r\n\r\n    // 添加点标记\r\n    // addPoint(location) { // 一个point需要有id和坐标\r\n\r\n    //     this.markerLayers.add(\r\n    //         {\r\n    //             'id': point[location.index],\r\n    //             'styleId': 'mystyle',\r\n    //             \"position\": new window.TMap.LatLng(location.latitue, location.longitue),\r\n    //             \"properties\":{} // 自定义属性，可以没有\r\n    //         }\r\n    //     )\r\n    // },\r\n  },\r\n};\r\n</script>"]}]}