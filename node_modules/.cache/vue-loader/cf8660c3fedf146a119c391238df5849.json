{"remainingRequest":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\SchoolProject\\dp_font\\src\\components\\LoginComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\src\\components\\LoginComponent.vue","mtime":1654742317345},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\SchoolProject\\dp_font\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgcmVxdWVzdCBmcm9tICJAL3V0aWxzL3JlcXVlc3QiOw0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICJMb2dpbkNvbXBvbmVudCIsDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgLy8gY2FwdGNoYV91cmw6ICIiLA0KICAgICAgICAgICAgcnVsZUZvcm06IHsNCiAgICAgICAgICAgICAgICAvL2NhcHRjaGFfa2V5OiAiIiwNCiAgICAgICAgICAgICAgICAvL2NhcHRjaGE6ICIiLA0KICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAiIiwNCiAgICAgICAgICAgICAgICBwYXNzd29yZDogIiIsDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgcnVsZXM6IHsNCiAgICAgICAgICAgICAgICB1c2VybmFtZTogWw0KICAgICAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXnlKjmiLflkI0iLCB0cmlnZ2VyOiAiYmx1ciIgfSwNCiAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWvhueggSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgICAgICAgIC8vIGNhcHRjaGE6IFt7IHJlcXVpcmVkOiBmYWxzZSwgbWVzc2FnZTogIuivt+i+k+WFpemqjOivgeeggSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgICAgIH0sDQogICAgICAgIH07DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIHN1Ym1pdEZvcm0oZm9ybU5hbWUpIHsNCiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnJ1bGVGb3JtKTsNCiAgICAgICAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKCh2YWxpZCkgPT4gew0KICAgICAgICAgICAgICAgIGlmICh2YWxpZCkgew0KICAgICAgICAgICAgICAgICAgIHJlcXVlc3QuZ2V0KCd1c2VyL2xvZ2luP3VzZXJuYW1lPScrdGhpcy5ydWxlRm9ybS51c2VybmFtZSArJyZwYXNzd29yZD0nK3RoaXMucnVsZUZvcm0ucGFzc3dvcmQpLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQoJCQkJCQlpZihyZXNwb25zZS5kYXRhLnJldCA9PTApew0KCQkJCQkJCXRoaXMucmVmcmVzaF9jYXB0Y2hhKCk7DQoJCQkJCQkJdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwb25zZS5kYXRhLm1zZyk7ICAgIA0KCQkJCQkJfWVsc2V7DQoJCQkJCQkJbGV0IHRva2VuID0gcmVzcG9uc2UuZGF0YS50b2tlbg0KCQkJCQkJCWxldCBpZCA9IHJlc3BvbnNlLmRhdGEuaWQNCgkJCQkJCQl0aGlzLiRzdG9yZS5jb21taXQoJ3NhdmVVc2VySW5mbycsIHsndXNlcm5hbWUnOiB0aGlzLnJ1bGVGb3JtLnVzZXJuYW1lLCAndG9rZW4nOiB0b2tlbiwgJ2lkJzogaWR9KQ0KCQkJCQkJCXRoaXMuJHJvdXRlci5wdXNoKHtuYW1lOiAnSG9tZSd9KQ0KCQkJCQkJfQ0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWZyZXNoX2NhcHRjaGEoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlcnJvci5yZXNwb25zZS5kYXRhLmRldGFpbCk7ICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yIHN1Ym1pdCEhJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCiAgICAgICAgcmVzZXRGb3JtKGZvcm1OYW1lKSB7DQogICAgICAgICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS5yZXNldEZpZWxkcygpOw0KICAgICAgICB9LA0KICAgICAgICByZWZyZXNoX2NhcHRjaGEoKSB7DQogICAgICAgICAgICB0aGlzLmF4aW9zLmdldCgnY2FwdGNoYS9yZWZyZXNoLycsIHsgaGVhZGVycyA6IHsnWC1SZXF1ZXN0ZWQtV2l0aCc6ICdYTUxIdHRwUmVxdWVzdCd9IH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5jYXB0Y2hhX3VybCA9IHJlc3BvbnNlLmRhdGEuaW1hZ2VfdXJsOw0KICAgICAgICAgICAgICAgIHRoaXMucnVsZUZvcm0uY2FwdGNoYV9rZXkgPSByZXNwb25zZS5kYXRhLmtleTsNCiAgICAgICAgICAgIH0pICANCiAgICAgICAgfSAgICAgDQogIH0sDQogIG1vdW50ZWQoKSB7DQogICB0aGlzLnJlZnJlc2hfY2FwdGNoYSgpDQogIH0sDQogIA0KIA0KfQ0K"},{"version":3,"sources":["LoginComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"LoginComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <el-form\r\n    :model=\"ruleForm\"\r\n    :rules=\"rules\"\r\n    ref=\"ruleForm\"\r\n    label-width=\"80px\"\r\n    class=\"demo-ruleForm\"\r\n  >\r\n    <el-form-item label=\"用户名\" prop=\"username\">\r\n      <el-input\r\n        prefix-icon=\"el-icon-user-solid\"\r\n        v-model=\"ruleForm.username\"\r\n      ></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item label=\"密码\" prop=\"password\">\r\n      <el-input\r\n        prefix-icon=\"el-icon-lock\" type=\"password\"\r\n        v-model=\"ruleForm.password\"\r\n      ></el-input>\r\n    </el-form-item>\r\n\r\n    <!-- <el-form-item label=\"验证码\" prop=\"captcha\">\r\n        <el-row type=\"flex\" class=\"row-bg\" justify=\"space-between\">\r\n            <el-col :span=\"11\">\r\n                <el-input\r\n                prefix-icon=\"el-icon-view\"\r\n                v-model=\"ruleForm.captcha\"\r\n                ></el-input>\r\n            </el-col>\r\n            <el-col :span=\"11\" style=\"line-height: 100%\">\r\n                <img :src=\"captcha_url\" alt=\"\" @click=\"refresh_captcha()\" style=\" cursor:pointer;\" />\r\n                <el-input type=\"hidden\" name=\"captcha_key\" v-model=\"ruleForm.captcha_key\" style=\"display: none;\" ></el-input>\r\n            </el-col>\r\n      </el-row>\r\n    </el-form-item> -->\r\n\r\n    <el-form-item>\r\n      <el-row type=\"flex\" class=\"row-bg\" justify=\"space-between\">\r\n        <el-col :span=\"11\">\r\n          <el-button\r\n            type=\"primary\"\r\n            @click=\"submitForm('ruleForm')\"\r\n            style=\"width: 100%\"\r\n            >登&nbsp;&nbsp;录</el-button\r\n          >\r\n        </el-col>\r\n        <el-col :span=\"11\">\r\n          <el-button @click=\"resetForm('ruleForm')\" style=\"width: 100%\"\r\n            >重&nbsp;&nbsp;置</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nexport default {\r\n    name: \"LoginComponent\",\r\n    data() {\r\n        return {\r\n           // captcha_url: \"\",\r\n            ruleForm: {\r\n                //captcha_key: \"\",\r\n                //captcha: \"\",\r\n                username: \"\",\r\n                password: \"\",\r\n            },\r\n            rules: {\r\n                username: [\r\n                { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n                ],\r\n                password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\r\n               // captcha: [{ required: false, message: \"请输入验证码\", trigger: \"blur\" }],\r\n            },\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n          console.log(this.ruleForm);\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                   request.get('user/login?username='+this.ruleForm.username +'&password='+this.ruleForm.password).then((response) => {\r\n\t\t\t\t\t\tif(response.data.ret ==0){\r\n\t\t\t\t\t\t\tthis.refresh_captcha();\r\n\t\t\t\t\t\t\tthis.$message.error(response.data.msg);    \r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlet token = response.data.token\r\n\t\t\t\t\t\t\tlet id = response.data.id\r\n\t\t\t\t\t\t\tthis.$store.commit('saveUserInfo', {'username': this.ruleForm.username, 'token': token, 'id': id})\r\n\t\t\t\t\t\t\tthis.$router.push({name: 'Home'})\r\n\t\t\t\t\t\t}\r\n                        \r\n                    }).catch((error) => {\r\n                        this.refresh_captcha()\r\n                        this.$message.error(error.response.data.detail);                        \r\n                    })\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        refresh_captcha() {\r\n            this.axios.get('captcha/refresh/', { headers : {'X-Requested-With': 'XMLHttpRequest'} }).then((response) => {\r\n                this.captcha_url = response.data.image_url;\r\n                this.ruleForm.captcha_key = response.data.key;\r\n            })  \r\n        }     \r\n  },\r\n  mounted() {\r\n   this.refresh_captcha()\r\n  },\r\n  \r\n \r\n}\r\n</script>"]}]}